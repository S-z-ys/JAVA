
#include<stdio.h> /*I/O函数*/
#include<stdlib.h>  /*其它说明*/
#include<string.h>  /*字符串函数*/
#define N  1000    /* 最大学生人数,实际请更改*/

struct student  //定义结构体
{
    char code[20];   /* 学号*/
    char name[20];   /* 姓名*/
    int age;            /* 年龄*/
    char sex[10] ;    /* 性别 */
	char num[25];     /*电话号码*/
}stu[N];
float score[N][6];     /* 5门课程成绩 总分*/

/*函数声明*/
int k=1,n=0, m=0;/* n代表当前记录的学生人数*/   
void set(); //刷新
void seek();     //查找函数
void modify();   //修改函数
void insert();   //插入函数
void del();      //删除函数
void display();  //显示函数
void menu();     //主菜单函数
void fen();     //显示成绩
void ming();  //成绩排名
void ren(); //显示男女人数
void high();  //指定最高分
void save();    //保存学生信息

/*主函数*/
int main()
{ 
    while(k)
    {
        menu();
    }
      system("pause");  
return 0;

}


/*帮助菜单*/
void help()
{ 
    printf("\n0.欢迎使用系统帮助！\n");
    printf("\n1.初次进入系统后,请先选择增加学生信息;\n");
    printf("\n2.按照菜单提示键入数字代号;\n");
    printf("\n3.增加学生信息后,切记保存;\n");
    printf("\n4.谢谢您的使用！\n");
} 

/*建立信息功能*/
void set()
{
    const char *p="student.txt";  //将信息输入到文件中
    FILE *fp;
    int i=0;
    if((fp=fopen("E:\\student.txt","rt+"))==NULL)  //如果文件是空的
    {
        printf("打开文件失败",p);
        system("pause");
        exit(0);
    }
    while(fscanf(fp,"%s %s %d %s %s %s %s %s %s %s  ",stu[i].code,stu[i].name,stu[i].age,stu[i].sex,stu[i].num,
		score[i][0],score[i][1],score[i][2],score[i][3],score[i][4])==10)
    {
        i++;
        i=i;
    }
    fclose(fp);
    n=i;
    printf("-----刷新完毕------\n");  //信息刷新成功
}


/*查找功能*/
void seek() 
{
    int i,item,flag;
    char s1[21]; /* 以姓名和学号最长长度+1为准*/
    printf("-------------------------\n");
    printf("-----1.按学号查询-----\n");
    printf("-----2.按姓名查询-----\n");
    printf("-----3.退出本菜单-----\n");
    printf("------------------\n");
    while(1)
    {
        printf("-----请选择子菜单编号:  ");
        scanf("%d",&item);
        flag=0;                   //当被查询的学号存在时
        switch(item)
        {
        case 1:
            printf("------请输入要查询的学生的学号:  \n");
            scanf("%s",s1);
            for(i=0;i<n;i++)
                if(strcmp(stu[i].code,s1)==0)    //比较字符串是否相等
                {
                    flag=1;
                   printf("| 学生学号| 姓名 | 年龄 | 性别  |  电话号码  |  数据结构 | 软件工程 | 高等数学 | 大学英语 |  体育 | 序号 |\n");             
                    printf("----------------------------------------------------------------------------------------------------------\n");
                     printf("%3s %4s %4d %4s %15s %8.1f %10.1f %10.1f %10.1f %10.1f %5d\n",stu[i].code,stu[i].name,stu[i].age,
                        stu[i].sex,stu[i].num,score[i][0],score[i][1],score[i][2],score[i][3],score[i][4],n-i);
                }
                if(0==flag)    //查询的学号不存在时
                    printf("-----该学号不存在！-----\n"); break;
        case 2:
            printf("-----请输入要查询的学生的姓名:  \n");
            scanf("%s",s1);
            for(i=0;i<n;i++)
                if(strcmp(stu[i].name,s1)==0)    //当被查询的姓名存在时，比较字符串是否相等
                {
                    flag=1;
                    printf("| 学生学号| 姓名 | 年龄 | 性别 |  电话号码  |  数据结构 | 软件工程 | 高等数学 | 大学英语 |  体育 | 序号 |\n");             
                    printf("--------------------------------------------------------------------------------------------------------\n");
                     printf("%3s %4s %4d %4s %15s %8.1f %10.1f %10.1f %10.1f %10.1f %5d\n",stu[i].code,stu[i].name,stu[i].age,
                        stu[i].sex,stu[i].num,score[i][0],score[i][1],score[i][2],score[i][3],score[i][4],n-i);
                }
                    if(0==flag)        //当被查询的姓名存在时
                        printf("-----该姓名不存在！------\n"); break;
        case 3:return;
        default:printf("-----请在1-3之间选择------\n");
        }
    }
} 

/*修改功能*/
void modify() 
{
    int i,item,numb;
    char s1[21],s2[21]; /* 以姓名和学号最长长度+1为准*/
    printf("-----请输入要修改的学生的学号:  \n");
    scanf("%s",s1);
    for(i=0;i<n;i++)
        if(strcmp(stu[i].code,s1)==0) /*比较字符串是否相等*/
            numb=i;
        printf("------------------\n");
        printf("-----1.修改姓名\n");
        printf("-----2.修改年龄\n");
        printf("-----3.修改性别\n");
		printf("-----4.修改电话号码\n");   
        printf("-----5.退出本菜单\n");
        printf("------------------\n");

        /*输入新的信息*/
        while(1)
        {
            printf("-----请选择子菜单编号:  ");
            scanf("%d",&item);
            switch(item)
            {
            case 1:
                printf("-----请输入新的姓名:  \n");
                scanf("%s",s2);
                strcpy(stu[numb].name,s2); break;
            case 2:
                printf("-----请输入新的年龄:  \n");
                scanf("%d",&stu[numb].age);break;
            case 3:
                printf("-----请输入新的性别:  \n");
                scanf("%s",&stu[numb].sex); break;
			case 4:
                printf("-----请输入新电话号码:  \n");
                scanf("%s",&stu[numb].num);break;
            case 5: return;
            default:printf("-----请在1-5之间选择-----\n");
            }
        }
} 

/*按学号排序*/
void sort()
{
    int i,j,k,*p,*q,s;
    char temp[21];
    float ftemp;
    for(i=0;i<n-1;i++)
    {
        for(j=n-1;j>i;j--)
            if(strcmp(stu[j-1].code,stu[j].code)>0)  //冒泡排序
            {
                strcpy(temp,stu[j-1].code);
                strcpy(stu[j-1].code,stu[j].code);
                strcpy(stu[j].code,temp);
                strcpy(temp,stu[j-1].name);
                strcpy(stu[j-1].name,stu[j].name);
                strcpy(stu[j].name,temp);
                strcpy(temp,stu[j-1].sex);
                strcpy(stu[j-1].sex,stu[j].sex);
                strcpy(stu[j].sex,temp);
                strcpy(temp,stu[j-1].num);
                strcpy(stu[j-1].num,stu[j].num);
                strcpy(stu[j].num,temp);
                p=&stu[j-1].age;
                q=&stu[j].age;
                s=*q;
                *q=*p;
                *p=s;
                for(k=0;k<6;k++)  //对分数进行排序
                {
                    ftemp=score[j-1][k];
                    score[j-1][k]=score[j][k];
                    score[j][k]=ftemp;
                }
            }
    }
} 
/*插入函数*/
void insert() 
{
    int j=n;

    printf("-----请输入待增加的学生数:  \n");
    scanf("%d",&m);
    do
    {
        printf("-----请输入第%d 个学生的学号:  \n",j-n+1);
        scanf("%s",&stu[j].code);
        printf("-----请输入第%d 个学生的姓名:  \n",j-n+1);
        scanf("%s",&stu[j].name);
        printf("-----请输入第%d 个学生的年龄:  \n",j-n+1);
        scanf("%d",&stu[j].age);
        printf("-----请输入第%d 个学生的性别:  \n",j-n+1);
        scanf("%s",&stu[j].sex);
		printf("-----请输入第%d 个学生的电话号码:  \n",j-n+1);
        scanf("%s",&stu[j].num);
        printf("-----请输入第%d 个学生的数据结构:  \n",j-n+1);
        scanf("%f",&score[j][0]);
		printf("-----请输入第%d 个学生的软件工程:  \n",j-n+1);
        scanf("%f",&score[j][1]);
        printf("-----请输入第%d 个学生的高等数学:  \n",j-n+1);
        scanf("%f",&score[j][2]);
        printf("-----请输入第%d 个学生的大学英语:  \n",j-n+1);
        scanf("%f",&score[j][3]);
		printf("-----请输入第%d 个学生的体育:  \n",j-n+1);
        scanf("%f",&score[j][4]);
		score[j][5]=score[j][0]+score[j][1]+score[j][2]+score[j][3]+score[j][4];
		
    j++;
    }while(j<n+m);
    n+=m;
    printf("-----信息增加完毕！-----\n\n");
	sort();
}


/*删除学生信息*/
void del()
{
    int i,j,flag=0;
    char s1[21];
    printf("-----请输入要删除学生的学号:  \n");
    scanf("%s",s1);
    for(i=0;i<n;i++)
        if(strcmp(stu[i].code,s1)==0)  //比较字符串是否相等
        {
            flag=1;
            for(j=i;j<n-1;j++)
                stu[j]=stu[j+1];    
                score[j][0]=score[j+1][0];  
                score[j][1]=score[j+1][1];
                score[j][2]=score[j+1][2];
				score[j][3]=score[j+1][3];
                score[j][4]=score[j+1][4];


        }
        if(flag==0)
            printf("-----该学号不存在！-----\n");
        if(flag==1)
        {
            printf("-----删除成功,显示结果请选择菜单-----\n");
            n--;
        }
} 

/*显示学生信息*/
void display()
{
    int i;
    printf("-----共有%d位学生的信息:-----\n",n);
    if(0!=n)
    {
         printf("| 学生学号| 姓名 | 年龄 | 性别 |  电话号码  |  数据结构 | 软件工程 | 高等数学 | 大学英语 |  体育 | 序号 |\n");
		 printf("---------------------------------------------------------------------------------------------------------\n");
        for(i=0;i<n;i++)
        {
           printf("%3s %4s %5d %6s %15s %8.1f %10.1f %10.1f %10.1f %10.1f %5d\n",stu[i].code,stu[i].name,stu[i].age,
                        stu[i].sex,stu[i].num,score[i][0],score[i][1],score[i][2],score[i][3],score[i][4],n-i);
        }
    }
}


/*显示分数*/
void fen()
{
    int i;
    printf("-----共有%d位学生的信息:  \n",n);
    if(0!=n)
    {
         printf("| 学生学号 | 姓名 |  数据结构 | 软件工程 | 高等数学 | 大学英语 |  体育  |  平均成绩  |  总分 | 序号 |\n");
		 printf("-----------------------------------------------------------------------------------------------------\n");
        for(i=0;i<n;i++)
        { 
           printf("%3s %5s  %8.1f %12.1f %8.1f %10.1f %8.1f %10.1f %10.1f %5d\n",stu[i].code,stu[i].name,
                        score[i][0],score[i][1],score[i][2],score[i][3],score[i][4],
						(score[i][0]+score[i][1]+score[i][2]+score[i][3]+score[i][4])/5,
						score[i][0]+score[i][1]+score[i][2]+score[i][3]+score[i][4],n-i);
        }
    }
}


/*成绩排名*/
void ming()
{
   

    int i,j,k,*p,*q,s;
    char temp[21];
    float ftemp;
    for(i=0;i<n-1;i++)
    {
        for(j=n-1;j>i;j--)
            if(score[j-1][5]>score[j][5])  //冒泡排序
            {
                strcpy(temp,stu[j-1].code);
                strcpy(stu[j-1].code,stu[j].code);
                strcpy(stu[j].code,temp);
                strcpy(temp,stu[j-1].name);
                strcpy(stu[j-1].name,stu[j].name);
                strcpy(stu[j].name,temp);
                strcpy(temp,stu[j-1].sex);
                strcpy(stu[j-1].sex,stu[j].sex);
                strcpy(stu[j].sex,temp);
                strcpy(temp,stu[j-1].num);
                strcpy(stu[j-1].num,stu[j].num);
                strcpy(stu[j].num,temp);
                p=&stu[j-1].age;
                q=&stu[j].age;
                s=*q;
                *q=*p;
                *p=s;
                
                for(k=0;k<6;k++)  //对分数进行排序
                {
                    ftemp=score[j-1][k];
                    score[j-1][k]=score[j][k];
                    score[j][k]=ftemp;
                }
            }
    }



    printf("-----共有%d位学生的信息:  \n",n);
    if(0!=n)
    {
         printf("| 学生学号 | 姓名 |  总分|  序号 |\n");
		 printf("---------------------------------\n");
        for(i=0;i<n;i++)
        { 
			printf("%3s %7s   %5.1f %5d\n",stu[i].code,stu[i].name,score[i][5],n-i);
        }
    }
}

  /*查询男女学生人数 */
  void ren()
  {
	  int p=0,q=0,i;
	  printf("-----共有%d位学生的信息:  \n",n);
	for(i=0;i<n;i++)
	{
		if(strcmp(stu[i].sex,"男")==0) //判断性别，男加1
		{
			p=p+1;
		}
		if(strcmp(stu[i].sex,"女")==0)  //女加1
		{
			q=q+1;
		}
	}
	printf("|男生人数|女生人数|\n");
	printf("-------------------\n");
	printf("%5d %10d\n",p,q);
}
/*指定科目最高分，输出学号，姓名，最高分*/
void high()
{
 	int i,item;
 	int m=0,j[N];
	float p=0;
	printf("------------------------\n");
    printf("-------1.数据结构-------\n");
    printf("-------2.软件工程-------\n");
    printf("-------3.高等数学-------\n");
    printf("-------4.大学英语-------\n");
    printf("-------5.  体育   -------\n");
    printf("-------6.退出本菜单-------\n");
    printf("--------------------------\n");
    while(1)
{
printf("-----请选择子菜单编号:  ");
        scanf("%d",&item);
        
	
  switch(item)
  {	  	
case 1:
	{
			
for(i=0;i<n;i++)
{
		if(score[i][0]==p)
		{
			j[m]=i;
			m++;
		}
		if(score[i][0]>p)
		{
			m=0;
			p=score[i][0];
			j[m]=i;
			m++;
			
		}
	}
	{
	printf(" 学生学号 | 姓名 | 数据结构 \n");
	printf("----------------------------\n");
	
	for(i=0;i<m;i++)
	{
		printf("%5s %5s  %8.1f\n",stu[j[i]].code,stu[j[i]].name,score[j[i]][0]);
		m=0;
	}
}
	};break;
case 2:
	{
			
for(i=0;i<n;i++)
{
		if(score[i][1]==p)
		{
			j[m]=i;
			m++;
		}
		if(score[i][1]>p)
		{
			m=0;
			p=score[i][1];
			j[m]=i;
			m++;
			
		}
	}
	{
	printf(" 学生学号 | 姓名 | 软件工程 \n");
	printf("----------------------------\n");
	
	for(i=0;i<m;i++)
	{
		printf("%5s %5s  %8.1f\n",stu[j[i]].code,stu[j[i]].name,score[j[i]][1]);
		m=0;
	}
}
	};break;
case 3:
	{
			
for(i=0;i<n;i++)
{
		if(score[i][2]==p)
		{
			j[m]=i;
			m++;
		}
		if(score[i][2]>p)
		{
			m=0;
			p=score[i][2];
			j[m]=i;
			m++;			
		}
	}
	{
	printf(" 学生学号 | 姓名 | 高等数学 \n");
	printf("----------------------------\n");	
	for(i=0;i<m;i++)
	{
		printf("%5s %5s  %8.1f\n",stu[j[i]].code,stu[j[i]].name,score[j[i]][2]);
		m=0;
	}
}
	};break;
case 4:
	{			
for(i=0;i<n;i++)
{
		if(score[i][3]==p)
		{
			j[m]=i;
			m++;
		}
		if(score[i][3]>p)
		{
			m=0;
			p=score[i][4];
			j[m]=i;
			m++;	
		}
	}
	{
	printf(" 学生学号 | 姓名 | 大学英语\n");
	printf("----------------------------\n");	
	for(i=0;i<m;i++)
	{
		printf("%5s %5s  %8.1f\n",stu[j[i]].code,stu[j[i]].name,score[j[i]][3]);
		m=0;
	}
}
	};break;
case 5:
	{			
for(i=0;i<n;i++)
{
		if(score[i][4]==p)
		{
			j[m]=i;
			m++;
		}
		if(score[i][4]>p)
		{
			m=0;
			p=score[i][4];
			j[m]=i;
			m++;			
		}
	}
	{
	printf(" 学生学号 | 姓名 | 体育 \n");
	printf("----------------------------\n");	
	for(i=0;i<m;i++)
	{
		printf("%5s %5s  %8.1f\n",stu[j[i]].code,stu[j[i]].name,score[j[i]][4]);
		m=0;
	}
}
	};break;
case 6:return;
default:printf("-----请在1-6之间选择-----\n");
            }
	}
}


	
  
/*保存学生信息*/
void save()
{
    int i;
    FILE *fp;
    fp=fopen("E:\\student.txt","w");  //打开文件写入学生信息
    for(i=0;i<n;i++)
    {
        fprintf(fp,"%s %s %d %s %s %s %s %s %s %s  \n",stu[i].code,stu[i].name,stu[i].age,
                        stu[i].sex,stu[i].num,score[i][0],score[i][1],score[i][2],score[i][3],score[i][4]);
    }
    fclose(fp);                   //关闭文件，保存信息
    printf("-----成功保存信息！-----\n");
} 
/* 主菜单*/
void menu()
{
    int num;
    printf(" \n\n                    \n\n");
    printf("            ******************************************************\n\n");
    printf("            *                学生信息管理系统                    *\n \n");
    printf("            ******************************************************\n\n"); 
	printf("          *********************系统功能菜单*************************  \n");
    printf("            ----------------------   ----------------------       \n");
    printf("                **********************************************     \n");
    printf("                * 0.系统帮助及说明    * *  1.刷新学生信息    *      \n");
    printf("                **********************************************     \n"); 
    printf("                * 2.查询学生信息      * *  3.修改学生信息    *      \n");
    printf("                **********************************************     \n");
    printf("                * 4.增加学生信息      * *  5.按学号删除信息  *      \n");
    printf("                **********************************************     \n");
    printf("                * 6.显示当前信息      * *  7.显示分数        *      \n");
    printf("                **********************************************     \n");
    printf("                * 8.成绩排名          * *  9.显示男女人数    *      \n");
	printf("                **********************************************     \n");
	printf("                *10.显示科目最高分信息* * 11.保存当前学生信息*      \n");
	printf("                **********************************************     \n");
	printf("                *                 12.退出系统                *      \n");
    printf("                **********************************************     \n");
    printf("              ----------------------   ----------------------     \n");
    printf("-----请选择菜单编号:  ");
    scanf("%d",&num);
    switch(num)
    { 
    case 0:help();break;
    case 1:set();break;
    case 2:seek();break;
    case 3:modify();break;
    case 4:insert();break;
    case 5:del();break;
    case 6:display();break;
    case 7:fen();break;
	case 8:ming();break;
	case 9:ren();break;
	case 10:high();break;
	case 11:save();break;
    case 12:k=0;break;
    default:printf("-----请在0-12之间选择-----\n");
    }
}
